{"version":3,"sources":["view/CanvasView.ts","sprites/Ball.ts","sprites/Paddle.ts","CollisionPhysics.ts","setup.ts","sprites/Brick.ts","helpers.ts","index.ts"],"names":[],"mappings":";;AOAA;;AACA;;AAEA;AJGA,ACLA,AHEA,AIAA,AHAA,AFGA,IGAA,AFHA,AIAA,AHAA,AFGA,ICHA,CIAA,CHAA,IFGA,MGAA;AAAA,AGNA,ACIA,ANDA,AIAA,AHAA,AFGA;AGAA,ACJA,AHCA,AIAA,AHAA,AFGA,YGAA,AFHA,AIAA,AHAA,AFGA;AGAA,AGJA,ACKA,ANGE,AIAA,AHEA,AFCA,WGPF,AFIE,AIAA,AHEA,AFCA,ICHA,CACE,AIDF,CACE,AHCF,CACE,EDHF,CDGA,CCDE,AIFF,ALGY,CEDZ,CGAE,CHEA,ECRJ,GAAA,AFIE,AIAA,ALGA,CGsDD,ADvDC,CCNF,AFOI,AIAA,ALA0B,CGN5B,ADQE,IDLF,EAIE,CIJF,CHEA,CGEE,CHEA,CDNF,EAIe,CIJf,CHEA,CGGE,CHEA,KGPF,AHEA,EGGgB,AHED;AEdjB,AHaI,AICA,AHLF,AFEE,QEFF,CDIO,AICA,ALHA,IEFP,EDIE,AICA,CHLF,AFEE,ECEc,AICA,CLHC,CEFjB,EDIE,CICA,ILHuB,CAAC,aAAT,CAAuB,QAAvB,CAAf;AONJ,ANSI,AICA,ALHA,SCEK,AICA,ALHA,OCEL,AICA,CLHA,ECEe,AICA,CLHC,GCEhB,EICA,ALHqB,OAAL,CAAa,UAAb,CAAwB,IAAxB,CAAhB;AGPF,ACJF,AHcI,AICA,AH2CF,AF9CE,EGRF,OFUO,AICA,AH2CP,AF9CO,SGRP,AFUE,AICA,CFXF,CDsDA,CD5CmB,AICA,CLHjB,CE8CY,EF9CS,GGRvB,CAAA,AFUE,AICA,IH2Ca,AF9CgB,CAAC,CE8ClB,EAAkB,QCtDhC,EHQuB,CGRvB,AHQ8C,QAAvB,CAArB,CGRe,IAAjB,EAA6B,KAA7B,EAAyC;AACvC,AIEJ,ANQI,AICA,AH2CA,AF9CA,QGPE,CFSG,AICA,ALHA,CE8CD,ECrDE,ADqDA,CCrDC,ADqDA,ED5CP,CICA,CH2CI,CD5CU,CICC,EFVb,AHOF,CGPgB,AFSE,AC4CF,CCrDd,CHOkB,CKGpB,CFVoB,CFSN,EAAd,EETyB,CAAC,AHOE,CE8CxB,AF9CyB,IE8CE,EAAE,CCrDb,ADqDc,CCrDC,CAAf,CDqDW,ECrDQ,CHOnB,CAAuB,CE8CD,ECrDE,CAAC,IHOzB,CGPlB,AHOF,GE8CA,CCpDE,CDoDqD,GCpDjD,CAAC,QAAL,CAAc,CAAd,GAAkB,IAAI,CAAC,KAAvB,GAA+B,KAAK,CAAC,QAAN,CAAe,CAD9C,IAEA,IAAI,CAAC,QAAL,CAAc,CAAd,GAAkB,KAAK,CAAC,QAAN,CAAe,CAAf,GAAmB,KAAK,CAAC,MAF3C,IAGA,IAAI,CAAC,QAAL,CAAc,CAAd,GAAkB,IAAI,CAAC,MAAvB,GAAgC,KAAK,CAAC,QAAN,CAAe,CAJjD,EAKE;AACA,ACVN,AHeI,AIEA,AH0CE,AF9CF,QE8CE,CD5CG,AIEA,ALJA,IGHI,ADiDH,CAAC,AF9CP,CCEA,AIEA,CJFY,CELV,AHGW,CKIC,CJFd,GAAkB,AIEA,CH0ChB,EF9CmB,CE8CF,AF9CG,CCEtB,AIEc,EAAd,EH0CE,QF9CW,CAAuB,OAAvB,CAAb;AGFC,AIOL,ANDI,AICA,AH0CC,AF9CF,KGVC,IFaK,AICA,EFPE,IEOP,CAAY,EJDZ,CICA,EJDiB,CICC,KAAlB;AFNE,AFMA,AICH,MJDG,CAAC,EAAE,IENI,CFKQ,IELf;AACD,AFMC,AC0CF,AF5CF,EAAA,ICEI,CAAC,CDFL,CCEO,ADFP,CCEQ,AC0CF,EAAE,CAAC,IAAH,KAAY,CF5ClB,CAAI,UE4CE,AF5CF,CAAA,GE4C8B,EAAE,CAAC,GAAH,AF5ClC,EAAI,GE4CyC,KF5C7C,EAAU,KE4CR,EAAyD;AC/C1D,ACnBH,AHsBqB,AIInB,AHyCI,AF9CJ,EKKA,CFlBA,CAFF,CAeE,AFCE,GIIF,AHyCI,CGzCJ,IHyCQ,CAAC,SGzCT,CAAI,AHyCA,GAAkB,EGzClB,CAAA,EHyCA,OGzCJ,EAAI,OAAJ,EAAS;AEpBX,AHCA,AHoBG,ACyCE,SG1CH,ALJA,eKIA,ALJA;AOZF,AHFA,ACmBI,AH0CD,AF9CC,KEuCF,QGnCS,ALJA,KKIK,ALJA,MKIZ,CLJA;AGDF,AIAF,AHbA,AHoBE,AIDC,ALJA,EGFD,AFOA,EGpBI,CCiBK,ALJC,GCOV,CAAA,CGpBU,GAA6B,KDavC,CAAA,ECb+C,CAAC,CHoBhD,CAAI,IEPJ,AFOI,CEPJ,AFOI,MGpBmC,CAAuB,EHoB9D,EAAI,MEPJ,CFOA,CGpBuC,CDavC,ACbF,AHoBW,EGlBX,QDWoB,IAAlB,EAA8B,MAA9B,EAA+C;AAA/C,AIGF,AL8CE,QCjDA,CFOA,AC0CA,ICjDA,GAAA,IAAA,CEIS,ALJC,CEiDV,ED1CA,CC0CgB,UAAC,EAAD,EAAkB;AK7CpC,AHdO,AHkBH,AC0CA,IK9CA,AHdS,MF4DL,EK9CI,AL8CF,CD1CC,AC0CA,EK9CI,EHdW,AF4DlB,CD1CQ,EMJhB,AHd6B,EAAtB,AF4Da,ED1ChB,SC0CI,IAA2B,EAAE,CAAC,GAAH,KAAW,WAA1C,EAAuD;ACjDvD,AIIJ,ANIG,AILQ,AH+CL,AFnDM,GKIV,ALJA,COKE,CNEO,ADvBX,CAoBE,EGHM,ADkDF,CK9CG,GAAG,CAAZ,AL8CU,CAAC,KClDQ,GAAG,CDkDhB,GAAiB,CClDnB,GDkDE;AChDF,AGrBJ,ACwBA,AHfO,ACiBL,AH4CG,EG5CH,EFLE,AIGA,AHfS,ICiBX,CAAA,CFLQ,CAAC,GIGG,AHfS,GGeN,AHfS,CDYtB,AIGc,CJHC,AIGnB,AHfO,EHgBI,EICT,CAAI,KFLc,AEKd,CAAA,QFLa,CEKjB,CFL2B,CEKvB,QAAJ,EAAU;AFJN,AHCJ,EAAA,IGDI,GEIJ,GLHA,CAAA,EGDa,CAAC,MHCd,CGDI,AHCJ,CGDsB,AEItB,ILHA,GAAA,GGDuB,KAAD,EAAQ,EHC9B,CGDsB,EAAW;AAC3B,AIGR,AHhBO,AHeI,AIEP,AH4CA,GD9CF,CGfW,KGgBJ,CL6CD,EChDI,ADgDF,CG5CC,AH4CA,CE7DY,GDaP,ACbU,AF6DlB,CChDS,AEID,CDjBT,CGgBP,CAAqB,CL6CD,GK7CpB,AFCI,EEDiC,OJHzB,ADgDJ,CChD0B,GDgDE,CChDxB,CDgD0B,CChDE,ADgDD,GAAH,EChDxB,CAAJ,EAAwC,ADgDD,YAA3C,EAAyD;AC/CnD,AIGR,ANCA,AIAC,AH4CG,EK7CJ,ANCA,GIFU,CECN,CAAC,CNCL,AC4CI,CD5CJ,CEJQ,GDgDA,CChDI,ADgDH,CChDI,AIGb,CAAc,ONCd,CAAI,AC4CA,GAAkB,CK7CtB,ANCI,CAAA,EEJI,ADgDJ,OD5CJ,EAAI,OAAJ,EAAS;AKvBL,ACuBJ,AHjBK,AF8DF,AFjDD,EOIF,EHjBW,CJaT,EAAA,EMnBY,ALuBd,CMAQ,APJN,GOIS,EPJJ,EOIP,AHjBwB,GAAG,CENvB,AFMC,ACeK,ELFR,CMnBwB,ALuB1B,KDJe,IAAb,IAAa,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAa,EAAA,CAAE,SAAF,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAK,OAAL,CAAa,KAA/B,EAAsC,KAAK,OAAL,CAAa,MAAnD,CAAb;AGEM,AGpBR,ACuBD,ANAG,AC6CD,AFjDA,GAFD,EE4CA,II7DO,ILuBE,CEHG,IFGE,CEHG,CAAC,EGpBL,ELuBX,EEHU,EGpBL,CAAa,EHoBS,CAArB,EAAwB,KGpBX,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAe;AHqBzB,AGpBR,AFKG,AHkBJ,AIJS,ALCV,GKDA,CDdW,CHgBF,GKrBD,GAAG,CHoBD,EGpBc,CFKF,GELpB,AFKuB,GDeN,CAAC,ECfW,GAC7B,CDcQ,CAAiB,ECdrB,CDcI,ACdH,EDcyB,CAAtB,ECdR,CAAW,CAAC,MAAM,CAAC,KAAP,GAAe,aAAa,GAAG,CAAhC,IAAqC,UAAhD,IAA8D,aADjC,GAE7B,GAFG;ADgBI,AGpBP,ACuBJ,AFDE,AHfE,EGeF,MCtBQ,ADsBR,CECO,AFDP,AHfO,ECWC,IDXN,ECaa,CGpBG,AJOF,CKgBlB,CAAoB,CDvBY,ALoBrB,EIET,AHfE,CIP+B,ACuBnC,AFDM,CCtB8B,CCuBA,GFD9B,CAAA,CCtB0B,CAAW,ODsBzC,EAAI,CCtBsC,GAAD,EAAM,IAAN,ADsBzC,ECtBqD,ADsBzC,MCtB6B,EAAkB;AHqBjD,AGpBN,ACuBJ,AHjBK,AFCH,EKgBF,EHjBW,EGiBP,CAAC,EFFL,AHdO,CIPG,EHoBA,GGpBK,ACuBf,CAAc,AHjBS,AFCrB,CCaa,CAAC,AGpBE,CFMQ,AFCT,EIPb,GHoBM,AECV,CDfgC,AFC9B,GEAA,IAAI,CAAC,KAAL,CAAW,CAAC,GGgBd,GHhBoB,CAAC,MAAP,GAAgB,aAAa,GAAG,CAAjC,IAAsC,UAAjD,IAA+D,aADjC,GAE9B,EAFG;ADeI,AGpBL,ACuBJ,ANLS,AIGP,AHdA,EKgBF,CNLA,MCXO,CIPG,ACuBF,GAAG,AFFF,ECrBM,ECuBf,CDvBkB,ADqBJ,AHdZ,GAAiB,GIPf,GDqBF,EHdA;AILE,ACsBL,AHhBM,AHaL,AICC,AHdC,EDaF,EGbW,CCYC,GJCZ,CAAA,ACbO,CING,CAAC,GAAG,CJMZ,CEAqB,EFAP,CEAU,GAArB,AFAe,CDapB,CAAI,GCbY,CDaZ,CAAA,ACbF,QIN4B,CLmB9B,EAAI,EKnB+B,IAAI,ELmBvC,EAAU,iBKnB2C,oBAAlB,CAA/B;AHoBI,AGnBJ,AJMF,SDYF,ACZO,CCaC,AGnBE,CAAC,GAAG,CJMZ,CAAY,GAAZ,ECaiB,AEFP,CHXQ,ECaE,AFDtB,GCZE,CCaM,SGnBsB,KAAK,IAAI,sBAAe,oBAAnB,CAA/B;AHoBG,AIGT,AHjBO,AHaH,ACXA,AFUF,EAAA,EIZW,KGiBJ,ALfA,GFUP,CCCS,ADDT,EEVE,EKeJ,AHjB0B,CGkBxB,ANLc,ACXE,EEFW,EGiB7B,AHjBO,AJYL,CEVE,AFUF,COOA,CNNE,KMIJ,EAGE,MAHF,APLE,EOSA,CPTA,GOKF,EAKE,KPVgB,WOKlB,EAKoC,APVlC,EAAyD;AGGpD,AGnBD,AC4BJ,ANVC,AIHW,AHRV,AFSF,EOYA,CFbA,EJCU,CMYN,CJrBA,AIqBC,CPZL,CETO,CIPC,EC4BR,CPZA,CMhBY,ENgBZ,EETE,CIPe,CAAb,ANgBJ,CETmB,CIPC,IJOlB;ACaC,AGnBG,AC4BN,AHxBK,ACcL,AHXE,EKqBF,AFVA,EDdW,CDCT,CIuBE,CAAC,CFVL,CAAA,AHXO,MIPM,EC4Bb,AHxBwB,CEJlB,AC4BU,CLrBd,CEHyB,CHWjB,CCRU,CEHf,ACcL,CEUA,AFVI,GHXF,CAVa,CGqBX,AHTF,CGSE,SAAJ,EAAI,OAAJ,EAAS;AFEP,AGnBG,AC4BL,EAAA,IAAI,CAAC,EFXL,EFES,MIST,CAAgB,IJTd,EISF,AFXA;AFGC,AISD,AHzBK,AHUK,AIIR,AHTA,EKoBF,CJ5BA,AFaA,CGVW,AFKT,EKoBE,CAAC,KLpBK,CGSD,AHTE,GELY,CGyBvB,CAAgB,AFXF,CDdY,EAArB,CGyBL,EALkC,AFNhC,CEaF,ILtBE,CAA0B,SAA1B,EAAqC,KAAK,aAA1C;AIPE,ALeJ,AIEC,AHTC,AFKA,ECEF,ECPE,CGOO,ALFP,EAAA,CCEF,CAAA,CDFE,EELQ,CIRN,AJQO,EFKJ,QCEP,CAAI,GKfA,ANaF,CMba,ALeX,CAAA,ACPF,CAA0B,CIRxB,EAAc,ANaC,CMbC,GJQlB,AFKA,CMbsB,ALexB,CCPqC,CDOjC,CDFe,EAAA,CELuB,IFKvB,EMbC,ALepB,CKf8B,CLelB,CDFO,CAAjB,CELA,EFKiB,KAAA,CAAjB,GAAiB,EAAA,CMbC,ANaC,EMbsB,cNaxB,CAAmB,IMblB,EAAqC,CNatC,EAA4B,YAAA;AGO/C,AGpB2D,AC8B3D,AH3BK,AFMJ,AFIoD,EGOrD,AIUA,EH3BW,EG2BP,CAAC,CD9BsD,CAAC,ALe5D,EKf4D,CAAH,CNaJ,CIVhC,CG2BrB,EH3BwB,CDiBxB,AIEkC,AHnB7B,CDiBL,AIYA,EFjBS,GJAT,EDFkE,CAAC,CGOnE,CAAA,GHPkE,CAAb,cGOrD,GAAA,UAAmB,IAAnB,EAA+B,MAA/B,EAA+C,IAA/C,EAA+D;AAC7D,AGrB4D,ALgB5D,ADHsE,KAArD,CAAjB,EMb4D,CAAC,EAAA,ELgBtD,KAAK,SAAZ;AEMA,AGtBuD,ACiCzD,AH7BK,AHaJ,AIFQ,AHJT,AFGC,EEHD,CGIA,ALHA,CIRW,CHWC,CMmBT,CDlCiB,CHuBhB,ADZJ,CIXmE,AJWnE,GCYQ,AIWC,CJXA,AIWC,AH9BU,GAAG,EAAlB,GDmBD,CAAc,CAAd,ADZJ,CAAI,CKuBD,CJXmB,GGvB0D,ACkCtD,CJXA,ADZtB,CCYuB,ADZvB,EIX+D,CAA/C,CCkCY,CJX5B,AGvBmF,ACkCtD,GJXE,CDZnC,EAAI,EKuBsB,CJXe,AIWC,CJXA,AIWhB,GAAoB,ALvB9C,CKuBE,CLvBO,GCY0B,AIYhC,CJZgD,CAA/C,AGvBgG,IHwBhG,AGxBmF,ACmC9E,CDnCW,ACmCV,CDnCQ,CAAd,CHwBI,AGxBJ,CHwBK,QAAL,CAAc,AIWf,CJXC,GAAkB,AIYlB,MJZwB,AIYlB,CJZmB,AIYlB,QJZW,AIYlB,CJZkC,AIYlB,CJZE,AIYlB,GJZsC,AIYlB,IAAI,CAAC,CJZmB,CAAC,IIYzB,CJbpB,AIagC,IJXhC,CIWoB,GJXhB,AIWoC,CJXnC,KIWyC,CAAC,EJX/C,CAAc,CAAd,CIQJ,EJRsB,AIYpB,IJZwB,CAAC,MAAvB,KAAkC,MAAM,CAAC,QAAP,CAAgB,CAHpD,EAIE;AACA,AG1BD,ACqCD,AFnBF,ALHA,EKGA,EEmBE,CDjD4B,CHsC1B,CG1BC,CDkBL,CC9B8B,AD8B9B,AHRA,CCgBQ,AGtCN,ACiDM,CJXC,AIWA,UAAP,ANvBU,EIIZ,CAAI,AHRJ,GCgBI,EERA,CAAA,SAAJ,EAAI,QAAJ,EAAU;AFSP,AGzBD,ACoCD,AHlCI,AFOH,IEPS,CDeoD,CAU7D,GEXF,EChBE,EJSO,EEPa,GAAG,AFOX,GEPT,GCcL,AHPE,CITA,CAAW,GAAX,EAAc,CAAE,UAAF,CAAd,CAAA;AH4BA,AG3BD,ALWW,AIKV,AHPD,GI1BM,AL4BP,EKXG,AJOM,EIxBF,CAAP,KDiCS,KAAK,OAAZ;ACfH,ACoCC,AHnCK,ACeJ,EEoBD,EHnCW,CCaD,UDbY,GGmCN,AHnCS,CGmCR,EHnCZ,AFKI,gBK8BT,CAAoC,IAApC,EAA0C,MAA1C,EAAkD,IAAlD;AACA,ANvBA,EAAA,IMuBM,ANvBN,CAAA,EIGA,OJHA,CAAA,GMuBoB,EFpBT,CEoBqB,KFpBhC,EAAyB,GJHzB,GAAA,GMuBgD,CAAC,QNvBjD,SMuBgC,CAAmC,IAAnC,EAAyC,MAAzC,CAAhC;AJVE,AGzBE,AFCC,AHYH,AIGA,AHZO,GAAT,CEHW,IDyBP,CG1BU,ALaP,EIGA,CFUC,CAAC,GCzBc,EHYrB,AIGA,CDfmD,AHYpC,CAAf,CEaE,AEVa,CFUC,AG1Bd,CH0BA,AG1BwB,ALaP,CAAC,EEaA,CEVpB,EChBE,ALauB,CEaD,CAAC,AG1BkB,MH0BvB,CAAY,AFbZ,CAAe,CAAnC,GEaoB,GAAoB,IAAI,CAAC,KAA3C,IACA,IAAI,CAAC,QAAL,CAAc,CAAd,GAAkB,CAFpB,EAGE;AACA,AG5BJ,ACoCA,AHnCA,AHYC,AIGA,AHVD,AFMA,EENA,AFMA,CCDA,EGVG,ACUO,CFiBN,AG5BA,ACoCA,EL9BJ,CAAA,CCsBQ,CAAC,AG5BA,CNYT,CAAA,CMZY,CAAZ,KCoCA,EAAoB,AHpCiC,AJYrD,CENA,AFMA,CENI,GCsBA,GDtBA,CAAA,CFMJ,GAAA,KENA,EAAI,GFMM,IENV,CFMA,CENS,CFMc;AGiBpB,AG5BH,ACoCE,AHnCF,AJWE,EMZF,ECoCE,CJzB6D,ACV5D,CD6BD,EG9BI,ANYA,CMZC,ACoCA,AL/BP,IFOW,GMZX,CAAe,IDUL,GDX2C,AFMrD,EFOE,CMZc,CNYU,OMZX,EAAS;AACtB,ACoCA,AHnCF,AHYA,ACRE,AFOE,ECCJ,EKbE,ACoCA,CHnCC,CHYH,CAAA,CMuBM,CAAC,EPxBE,CMZC,CAAC,AJKF,GDQT,CAAA,CMuBE,AL/BY,CK+BG,CDpCf,CAAiB,GCoCjB,AL/BA,AFOE,CIdiD,AJc9B,MMZH,ELapB,CDDI,EMZe,ALanB,CDDmC,CMZV,INYe,CAAC,KCCzC,GDDmC,EAA/B;AMXA,ACoCH,AHnCD,AHYE,AILQ,AHHT,AFOE,GOD+B,AFHlC,CE8BA,CHrCG,AFEM,CIHL,GLaG,EKbE,OLaP,CAAe,CAAf,GGhBmD,AHgBhC,CAAC,KAAK,SAAL,CAAe,CAAnC;AEgBA,AG5BC,AFCH,AHYC,AIAH,ALDG,GCDD,ADHA,EMVE,AFGC,GD2BG,CEfR,GFeY,CAAC,CEfb,OFeQ,AD1BG,CC0BW,CAAd,GAAkB,CAAtB,EAAyB;AACvB,AG5BH,AFLoD,AC5BvD,AL8CE,CIlBK,AC5BP,EC6BE,AD7BF,GF6DM,IAAI,CAAC,gBAAL;AACD,AG5BH,ACoCA,ANvBA,ACbS,EDaT,CCbA,GKoCI,ANvBJ,CAAA,EKbO,CCoCC,CAAC,GDpCT,ELaA,CAAA,EMuBI,CAAc,CAAd,GAAkB,CNvBtB,GMuB0B,ANvB1B,CMuB2B,MAAL,CAAY,INvBlC,EMuBA,EAA0C;AJPzC,AG5BF,ACoCG,AHnCG,AHYH,ACXF,EAAA,CCGA,CI+BE,AHnCS,IFCX,CDWO,ACXP,MKkCa,CAAC,AHnCS,EHYrB,CGZmD,AHYpC,CMu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","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["// Types\nimport { Brick } from \"../sprites/Brick\";\nimport { Paddle } from \"../sprites/Paddle\";\nimport { Ball } from \"../sprites/Ball\";\nimport { Sprite } from \"~/sprites/Sprite\";\n\nexport class CanvasView {\n  private _canvas: HTMLCanvasElement;\n  private _context: CanvasRenderingContext2D | null;\n  private _scoreDisplay: HTMLObjectElement | null;\n  private _startButton: HTMLOListElement | null;\n  private _info: HTMLObjectElement | null;\n\n  constructor(canvasId: string) {\n    this._canvas = document.querySelector(canvasId) as HTMLCanvasElement;\n    this._context = this._canvas.getContext('2d');\n    this._scoreDisplay = document.querySelector(\"#score\");\n    this._startButton = document.querySelector(\"#start\");\n    this._info = document.querySelector(\"#info\");\n  }\n\n  // Canvas should be visible\n  get canvas(): HTMLCanvasElement {\n    return this._canvas;\n  }\n\n  // Clear canvas\n  clear(): void {\n    this._context?.clearRect(0, 0, this._canvas.width, this._canvas.height);\n  }\n\n  /**\n   * Initialization of start button\n   * @param startFunction callback function that will execute on button click\n   */\n  initStartButton(startFunction: (view: CanvasView) => void): void {\n    this._startButton?.addEventListener(\"click\", () => startFunction(this))\n  }\n\n  /**\n   * Draws given score on its div#score.\n   * @param score Score to be drawn\n   */\n  drawScore(score: number): void {\n    if (this._scoreDisplay) {\n      this._scoreDisplay.innerHTML = score.toString();\n    }\n  }\n\n  /**\n   * Draws given info text (game over, press play, etc.) on its div#info.\n   * @param text Text to be drawn\n   */\n  drawInfo(text: string): void {\n    if (this._info) {\n      this._info.innerHTML = text;\n    }\n  }\n\n  /**\n   * Draws a sprite. Sprite's information such as its dimensions, image and (x, y) coordinates belong to a sprite.\n   * @param sprite sprite to draw\n   */\n  drawSprite(sprite: Sprite): void {\n    // if given sprite is null or undefined\n    if (!sprite) {\n      return;\n    }\n    \n      this._context?.drawImage(\n        sprite.image,\n        sprite.position.x,\n        sprite.position.y,\n        sprite.width,\n        sprite.height\n      );\n  }\n\n\n  /**\n   * Draws bricks for a level.\n   * @param bricks - array of bricks to be drawn\n   */\n  drawBricks(bricks: Brick[][]): void {\n    bricks.forEach(brickRow => brickRow.forEach(brick => this.drawSprite(brick)));\n  }\n\n}","import { Vector } from \"../types\";\nimport { Sprite } from \"./Sprite\";\n\nexport class Ball implements Sprite {\n  private _image: HTMLImageElement;\n  private _width: number;\n  private _height: number;\n  private _position: Vector;\n  private _velocity: Vector;\n\n  constructor(\n    size: number,\n    position: Vector,\n    image: string,\n    speed: number\n  ) {\n    this._width = size;\n    this._height = size;\n    this._position = position;\n    this._image = new Image();\n    this._image.src = image;\n\n    this._velocity = {\n      x: speed,\n      y: -speed\n    }\n    \n  }\n\n  get image(): HTMLImageElement {\n    return this._image;\n  }\n  get width(): number {\n    return this._width;\n  }\n  get height(): number {\n    return this._height;\n  }\n  get position(): Vector {\n    return this._position;\n  }\n\n  changeYDirection(): void {\n    this._velocity.y = -this._velocity.y;\n  }\n\n  changeXDirection(): void {\n    this._velocity.x = -this._velocity.x;\n  }\n\n  moveBall(): void {\n    this._position.x += this._velocity.x;\n    this._position.y += this._velocity.y;\n  }\n  \n}","import { Vector } from \"../types\";\nimport { Sprite } from \"./Sprite\";\n\nexport class Paddle implements Sprite {\n  private _image: HTMLImageElement;\n  private _width: number;\n  private _height: number;\n  private _position: Vector;\n  private _speed: number;\n  private _moveLeft: boolean;\n  private _moveRight: boolean;\n\n  constructor(\n    width: number,\n    height: number,\n    position: Vector,\n    image: string,\n    speed: number\n  ) {\n    this._width = width;\n    this._height = height;\n    this._position = position;\n    this._image = new Image();\n    this._image.src = image;\n\n    this._speed = speed;\n    this._moveLeft = false;\n    this._moveRight = false;\n\n    // Event listeners\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n    document.addEventListener(\"keyup\", this.handleKeyUp);\n  }\n\n  get image(): HTMLImageElement {\n    return this._image;\n  }\n  get width(): number {\n    return this._width;\n  }\n  get height(): number {\n    return this._height;\n  }\n  get position(): Vector {\n    return this._position;\n  }\n  get isMovingLeft(): boolean {\n    return this._moveLeft;\n  }\n  get isMovingRight(): boolean {\n    return this._moveRight;\n  }\n\n  movePaddle(): void {\n    if (this._moveLeft) {\n      this._position.x -= this._speed;\n    }\n    if (this._moveRight) {\n      this._position.x += this._speed;\n    }\n  }\n\n  handleKeyUp = (ev: KeyboardEvent): void => {\n    if (ev.code === \"ArrowLeft\" || ev.key === \"ArrowLeft\") {\n      this._moveLeft = false;\n    }\n    if (ev.code === \"ArrowRight\" || ev.key === \"ArrowRight\") {\n      this._moveRight = false;\n    }\n  };\n\n  handleKeyDown = (ev: KeyboardEvent): void => {\n    if (ev.code === \"ArrowLeft\" || ev.key === \"ArrowLeft\") {\n      this._moveLeft = true;\n    }\n    if (ev.code === \"ArrowRight\" || ev.key === \"ArrowRight\") {\n      this._moveRight = true;\n    }\n  };\n}\n","// Types\nimport { Brick } from \"./sprites/Brick\";\nimport { Paddle } from \"./sprites/Paddle\";\nimport { Ball } from \"./sprites/Ball\";\nimport { CanvasView } from \"./view/CanvasView\";\n\nexport class CollisionPhysics {\n  // Check ball collision with individual brick\n  isCollidingBrick(ball: Ball, brick: Brick): boolean {\n    if (\n      ball.position.x < brick.position.x + brick.width &&\n      ball.position.x + ball.width > brick.position.x &&\n      ball.position.y < brick.position.y + brick.height &&\n      ball.position.y + ball.height > brick.position.y\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Check ball collision with all bricks\n  isCollidingBricks(ball: Ball, bricks: Brick[][]): boolean {\n    let isColliding = false;\n\n    bricks.forEach((bricksRow) => {\n      bricksRow.forEach((brick, idx) => {\n        if (this.isCollidingBrick(ball, brick)) {\n          ball.changeYDirection();\n\n          if (brick.health === 1) {\n            bricksRow.splice(idx, 1);\n          } else {\n            brick.health--;\n          }\n\n          isColliding = true;\n        }\n      });\n    });\n    return isColliding;\n  }\n\n  checkBallCollision(ball: Ball, paddle: Paddle, view: CanvasView): void {\n    // Collision with paddle\n    if (\n      ball.position.x + ball.width > paddle.position.x &&\n      ball.position.x < paddle.position.x + paddle.width &&\n      ball.position.y + ball.height === paddle.position.y\n    ) {\n      ball.changeYDirection();\n    }\n\n    // Collision with walls\n    // Ball movement X constraints\n    if (\n      ball.position.x > view.canvas.width - ball.width ||\n      ball.position.x < 0\n    ) {\n      ball.changeXDirection();\n    }\n\n    // Ball movement Y constraints\n    if (ball.position.y < 0) {\n      ball.changeYDirection();\n    }\n  }\n}\n","// Bricks\nimport RED_BRICK_IMAGE from \"./images/brick-red.png\";\nimport BLUE_BRICK_IMAGE from \"./images/brick-blue.png\";\nimport GREEN_BRICK_IMAGE from \"./images/brick-green.png\";\nimport YELLOW_BRICK_IMAGE from \"./images/brick-yellow.png\";\nimport PURPLE_BRICK_IMAGE from \"./images/brick-purple.png\";\n\n// Grab the canvas element for calculating the brick width\n// depending on canvas width\nconst canvas: HTMLCanvasElement | null = document.querySelector(\"#playField\");\n\n// Constants\nexport const STAGE_PADDING = 10;\nexport const STAGE_ROWS = 20;\nexport const STAGE_COLS = 10;\nexport const BRICK_PADDING = 5;\nexport const BRICK_WIDTH = canvas\n  ? Math.floor((canvas.width - STAGE_PADDING * 2) / STAGE_COLS) - BRICK_PADDING\n  : 100;\nexport const BRICK_HEIGHT = canvas\n  ? Math.floor((canvas.height - STAGE_PADDING * 2) / STAGE_ROWS) - BRICK_PADDING\n  : 30;\nexport const PADDLE_WIDTH = 150;\nexport const PADDLE_HEIGHT = 25;\nexport const PADDLE_STARTX = 450;\nexport const PADDLE_SPEED = 10;\nexport const BALL_SPEED = 5;\nexport const BALL_SIZE = 20;\nexport const BALL_STARTX = 500;\nexport const BALL_STARTY = 400;\n\nexport const BRICK_IMAGES: { [key: number]: string } = {\n  1: RED_BRICK_IMAGE,\n  2: GREEN_BRICK_IMAGE,\n  3: YELLOW_BRICK_IMAGE,\n  4: BLUE_BRICK_IMAGE,\n  5: PURPLE_BRICK_IMAGE,\n};\n\nexport const BRICK_HEALTH: { [key: number]: number } = {\n  1: 1, // Red brick\n  2: 1, // Green brick\n  3: 2, // Yellow brick\n  4: 2, // Blue brick\n  5: 3, // Purple brick\n};\n\n// prettier-ignore\n\nexport const LEVEL = [\n  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\n  [0, 2, 2, 2, 2, 2, 2, 2, 2, 0],\n  [0, 3, 3, 3, 3, 3, 3, 3, 3, 0],\n  [0, 0, 4, 4, 4, 4, 4, 4, 0, 0],\n  [0, 0, 5, 5, 0, 0, 5, 5, 0, 0]\n]\n","import { Vector } from \"../types\";\nimport { Sprite } from \"./Sprite\";\n\nexport class Brick implements Sprite {\n  private _image: HTMLImageElement;\n  private _width: number;\n  private _height: number;\n  private _position: Vector;\n  private _health: number;\n\n  constructor(\n    width: number,\n    height: number,\n    position: Vector,\n    image: string,\n    health: number\n  ) {\n    this._width = width;\n    this._height = height;\n    this._position = position;\n    this._health = health;\n\n    this._image = new Image();\n    this._image.src = image;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n  \n  get height(): number {\n    return this._height;\n  }\n\n  get position(): Vector {\n    return this._position;\n  }\n\n  get image(): HTMLImageElement {\n    return this._image;\n  }\n\n  get health(): number {\n    return this._health;\n  }\n  set health(health: number) {\n    this._health = health;\n  }\n}","import { Brick } from './sprites/Brick';\n\nimport { BRICK_IMAGES, LEVEL, STAGE_PADDING, BRICK_WIDTH, BRICK_HEIGHT, BRICK_PADDING, BRICK_HEALTH } from './setup';\n\n/**\n * Creates array of bricks from values specified in setup.ts. We iterate over LEVEL\n * @returns Array of bricks\n */\n\nexport function createBricks(): Brick[][] {\n  return LEVEL.reduce((acc, elem, idx) => {\n    const row: number[] = elem;\n    const rowReduced: Brick[] = row.reduce((acc, elem, subIdx) => {\n      const rowNo = idx;\n      const colNo = subIdx;\n\n      const x = STAGE_PADDING + colNo * (BRICK_WIDTH + BRICK_PADDING);\n      const y = STAGE_PADDING + rowNo * (BRICK_HEIGHT + BRICK_PADDING);\n\n      if (elem === 0) {\n        return acc;\n      }\n\n      return [...acc, new Brick(BRICK_WIDTH, BRICK_HEIGHT, { x, y }, BRICK_IMAGES[elem], BRICK_HEALTH[elem])];\n    }, [] as Brick[]);\n\n    return [...acc, rowReduced];\n  }, [] as Brick[][]);\n}\n\nexport function calcBricksNum(bricks: Brick[][]): number {\n  let count = 0;\n  bricks.forEach((brickRow) => {\n    brickRow.forEach((brick) => {\n      count++;\n    });\n  });\n  return count;\n}\n","import { CanvasView } from \"./view/CanvasView\";\nimport { Ball } from \"./sprites/Ball\";\nimport { Brick } from \"./sprites/Brick\";\nimport { Paddle } from \"./sprites/Paddle\";\nimport { CollisionPhysics as CollisionPhysics } from \"./CollisionPhysics\";\n\n// Images\nimport PADDLE_IMAGE from \"./images/paddle.png\";\nimport BALL_IMAGE from \"./images/ball.png\";\n\n// Game configuration\nimport {\n  PADDLE_SPEED,\n  PADDLE_WIDTH,\n  PADDLE_HEIGHT,\n  PADDLE_STARTX,\n  BALL_SPEED,\n  BALL_SIZE,\n  BALL_STARTX,\n  BALL_STARTY,\n} from \"./setup\";\n\n// Helpers\nimport { calcBricksNum, createBricks } from \"./helpers\";\n\n// Initial values\nlet gameOver = false;\nlet score = 0;\nlet bricksLeft = -1;\n\nfunction setGameOver(view: CanvasView) {\n  view.drawInfo(\"Game over!\");\n  gameOver = true;\n}\n\nfunction setGameWin(view: CanvasView) {\n  view.drawInfo(\"Congratulations, you won!\");\n  gameOver = true;\n}\n\nfunction gameLoop(\n  view: CanvasView,\n  bricks: Brick[][],\n  paddle: Paddle,\n  ball: Ball,\n  collisionPhysics: CollisionPhysics\n) {\n  view.clear();\n  view.drawBricks(bricks);\n  view.drawSprite(paddle);\n  view.drawSprite(ball);\n\n  // Move ball\n  ball.moveBall();\n\n  // Paddle constraints: keep paddle in playfield\n  if (\n    (paddle.isMovingLeft && paddle.position.x > 0) ||\n    (paddle.isMovingRight &&\n      paddle.position.x < view.canvas.width - paddle.width)\n  ) {\n    paddle.movePaddle();\n  }\n\n  collisionPhysics.checkBallCollision(ball, paddle, view);\n  const collidingBrick: boolean = collisionPhysics.isCollidingBricks(ball, bricks);\n\n  if (collidingBrick) {\n    score++;\n    view.drawScore(score);\n  }\n\n  // Game over when ball leaves playField\n  if (ball.position.y > view.canvas.height) {\n    setGameOver(view);\n  }\n\n  if (bricksLeft === 0) {\n    setGameWin(view);\n  }\n\n  requestAnimationFrame(() =>\n    gameLoop(view, bricks, paddle, ball, collisionPhysics)\n  );\n}\n\nfunction startGame(view: CanvasView) {\n  // Reset displays\n  view.drawInfo(\"\");\n  view.drawScore(0);\n\n  // Reset values\n  score = 0;\n\n  // Create collision instance\n  const collisionPhysics = new CollisionPhysics();\n\n  // Create bricks & calc number of bricks\n  const bricks = createBricks();\n  bricksLeft = calcBricksNum(bricks);\n\n  // Create ball\n  const ball = new Ball(\n    BALL_SIZE,\n    {\n      x: BALL_STARTX,\n      y: BALL_STARTY,\n    },\n    BALL_IMAGE,\n    BALL_SPEED\n  );\n\n  // Create paddle\n  const paddle = new Paddle(\n    PADDLE_WIDTH,\n    PADDLE_HEIGHT,\n    {\n      x: PADDLE_STARTX,\n      y: view.canvas.height - PADDLE_HEIGHT - 5,\n    },\n    PADDLE_IMAGE,\n    PADDLE_SPEED\n  );\n\n  // Change info message\n  view.drawInfo(\"\");\n\n  // Start game loop\n  gameLoop(view, bricks, paddle, ball, collisionPhysics);\n}\n\n// Create new view\nconst view = new CanvasView(\"#playField\");\nview.initStartButton(startGame);\n"]}